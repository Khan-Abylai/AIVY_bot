version: '3.8'

networks:
  backend:

services:
  postgres_db:
    image: postgres:14
    container_name: gpt_postgres
    restart: always
    environment:
      POSTGRES_DB: gpt_db
      POSTGRES_USER: gpt_user
      POSTGRES_PASSWORD: gpt_password
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - backend

  telegram_bot:
    build: ./telegram
    container_name: bot
    restart: always
    depends_on:
      - postgres_db
      - qdrant
      - api_gpt    # Бот дождется готовности сервиса api_gpt
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_NAME: gpt_db
      DB_USER: gpt_user
      DB_PASSWORD: gpt_password
    volumes:
      - ./secrets/telegram_token:/run/secrets/telegram_token:ro
      - ./secrets/gpt_api_url:/run/secrets/gpt_api_url:ro
      - ./secrets/summary_api_url:/run/secrets/summary_api_url:ro  # <- new summary_api_url
    networks:
      - backend

  api_gpt:
    build: ./api_gpt
    container_name: gpt_api
    restart: always
    environment:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
      # GPT_API_KEY укажите, если нужно
    volumes:
      - ./secrets/gpt_api_key:/run/secrets/gpt_api_key:ro
    ports:
      - "9001:9001"
    networks:
      - backend

volumes:
  postgres_data:
